### === Basically a straight copy of the agnoster theme (https://bl.ocks.org/agnoster/3712874), with a few tweaks === ###

# Colours
CURRENT_BG='NONE'
PRIMARY_FG=black

# Characters
SEGMENT_SEPARATOR="\ue0b0"
PLUSMINUS="\u00b1"
BRANCH="\ue0a0"
DETACHED="\u27a6"

# Begin a segment: 
# takes two arguments, background colour and foreground (text) colour. 
# Both can be omitted [or, rather, given as empty strings?], rendering default background/foreground.
prompt_segment() {
  local bg fg
  [[ -n $1 ]] && bg="%K{$1}" || bg="%k"
  [[ -n $2 ]] && fg="%F{$2}" || fg="%f"
  if [[ $CURRENT_BG != 'NONE' && $1 != $CURRENT_BG ]]; then
    print -n "%{$bg%F{$CURRENT_BG}%}$SEGMENT_SEPARATOR%{$fg%}"
  else
    print -n "%{$bg%}%{$fg%}"
  fi
  CURRENT_BG=$1
  [[ -n $3 ]] && print -n $3
}

# End the prompt, closing any open segments
prompt_end() {
  if [[ -n $CURRENT_BG ]]; then
    print -n "%k%F{$CURRENT_BG}$SEGMENT_SEPARATOR"
  else
    print -n "%{%k%}"
  fi
  print -n "%{%f%}"
  CURRENT_BG=''
}

# Display username if it's different from default or if we're connected via SSH
prompt_context() {
  local user=$(whoami)

  if [[ "$user" != "$DEFAULT_USER" ]]; then
    prompt_segment $PRIMARY_FG default "%(!.%{%F{yellow}%}.)$user "
  elif [[ -n "$SSH_CONNECTION" ]]; then
    prompt_segment $PRIMARY_FG default "%(!.%{%F{yellow}%}.)$user@%m "
  fi
}

# Display current working directory
prompt_dir() {
  prompt_segment blue $PRIMARY_FG ' %2~ '
}

## The git stuff is buggy: doesn't autoload, and throws errors outside git repos
## Git: branch/detached head, dirty status
#prompt_git() {
#  local color ref
#  is_dirty() {
#    test -n "$(git status --porcelain --ignore-submodules)"
#  }
#  ref="$vcs_info_msg_0_"
#  if [[ -n "$ref" ]]; then
#    if is_dirty; then
#      color=yellow
#      ref="${ref} $PLUSMINUS"
#    else
#      color=green
#      ref="${ref} "
#    fi
#    if [[ "${ref/.../}" == "$ref" ]]; then
#      ref="$BRANCH $ref"
#    else
#      ref="$DETACHED ${ref/.../}"
#    fi
#    prompt_segment $color $PRIMARY_FG
#    print -Pn " $ref"
#  fi
#}

prompt_jyf_main() {
  CURRENT_BG='NONE'
  prompt_context
  prompt_dir
 # prompt_git
  prompt_end
}

prompt_jyf_precmd() {
  PROMPT='%{%f%b%k%}$(prompt_jyf_main) '
}

prompt_jyf_setup() {
  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info

  prompt_opts=(cr subst percent)

  add-zsh-hook precmd prompt_jyf_precmd

  zstyle ':vcs_info:*' enable git
  zstyle ':vcs_info:*' check-for-changes false
  zstyle ':vcs_info:git*' formats '%b'
  zstyle ':vcs_info:git*' actionformats '%b (%a)'
}

prompt_jyf_setup "$@"

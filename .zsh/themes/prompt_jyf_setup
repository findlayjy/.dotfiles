### === Basically a straight copy of the agnoster theme (https://bl.ocks.org/agnoster/3712874), with a few tweaks === ###

## TODO:
# [ ] When status symbols are implemented, context prompt adds a blank character at the end. I've disabled them for now therefore.
# [ ] Change colour of prompt when in SSH connection

# Colours
# Supported colors: red, blue, green, cyan, yellow, magenta, black, white
CURRENT_BG='NONE'
PRIMARY_FG=black

# Characters
SEGMENT_SEPARATOR="\ue0b0"
PLUSMINUS="\u00b1"
BRANCH="\ue0a0"
DETACHED="\u27a6"
CROSS="\u2718"
LIGHTNING="\u26a1"
GEAR="\u2699"
SNAKE="\xF0\x9F\x90\x8D"

# Begin a segment: 
# takes two arguments, background colour and foreground (text) colour. 
# Both can be omitted [or, rather, given as empty strings? or given as 'default'?], rendering default background/foreground.
prompt_segment() {
  local bg fg
  [[ -n $1 ]] && bg="%K{$1}" || bg="%k"
  [[ -n $2 ]] && fg="%F{$2}" || fg="%f"
  if [[ $CURRENT_BG != 'NONE' && $1 != $CURRENT_BG ]]; then
    print -n "%{$bg%F{$CURRENT_BG}%}$SEGMENT_SEPARATOR%{$fg%}"
  else
    print -n "%{$bg%}%{$fg%}"
  fi
  CURRENT_BG=$1
  [[ -n $3 ]] && print -n $3
}

# End the prompt, closing any open segments
prompt_end() {
  if [[ -n $CURRENT_BG ]]; then
    print -n "%k%F{$CURRENT_BG}$SEGMENT_SEPARATOR"
  else
    print -n "%{%k%}"
  fi
  print -n "%{%f%}"
  CURRENT_BG=""
}

# Display status:
# - was there an error
# - are there background jobs?
# - am I root
prompt_status() {
  local symbols
  symbols=()
  [[ $RETVAL -ne 0 ]] && symbols+="%{%F{red}%}$CROSS"
  [[ $(jobs -l | wc -l) -gt 0 ]] && symbols+="%{%F{cyan}%}$GEAR"
  [[ $UID -eq 0 ]] && symbols+="%{%F{yellow}%}$LIGHTNING"
  #
  [[ -n "$symbols" ]] && prompt_segment $PRIMARY_FG default " $symbols"
}

# Display username if it's different from default or if we're connected via SSH
prompt_context() {
  local user=$(whoami)

  if [[ "$user" != "$DEFAULT_USER" ]]; then
    prompt_segment $PRIMARY_FG default "%(!.%{%F{yellow}%}.) $user " 
  elif [[ -n "$SSH_CONNECTION" ]]; then
    prompt_segment $PRIMARY_FG default "%(!.%{%F{yellow}%}.) $user@%m "
  fi
}

# Display current working directory
prompt_dir() {
  prompt_segment blue $PRIMARY_FG " %2~ "
}

# Display conda environment
conda_env() {
  prompt_segment magenta $PRIMARY_FG " $SNAKE$CONDA_PROMPT_MODIFIER"
}

## Git: branch/detached head, dirty status
prompt_git() {
  local color ref
  is_dirty() {
    test -n "$(git status --porcelain --ignore-submodules)"
  }
  is_main_branch() {
      test ${ref} = "main" || test ${ref} = "master"
  }
  ref="$vcs_info_msg_0_"
  # Check if we're in a git repo; if not, do nothing; otherwise ...
  if [[ -n "${ref}" ]]; then
    # Check if we're out of sync with the remote
    if is_dirty; then
      color=yellow
      if is_main_branch; then
        ref="$PLUSMINUS"
      else
        ref="${ref} $PLUSMINUS"
      fi
    else
      color=green
      if is_main_branch; then
        ref=""
      else
        ref="${ref} "
      fi
    fi
    # Check if HEAD is attached or not
    if [[ $(git symbolic-ref -q HEAD) ]]; then
      ref="$BRANCH ${ref}"
    else
      ref="$DETACHED ${ref}"
    fi
    #
    prompt_segment $color $PRIMARY_FG
    print -Pn " ${ref}"
  fi
}

prompt_jyf_main() {
  RETVAL=$?
  CURRENT_BG='NONE'
  prompt_status
  conda_env
  prompt_context
  prompt_dir
  prompt_git
  prompt_end
}

prompt_jyf_precmd() {
  vcs_info
  PROMPT='%{%f%b%k%}$(prompt_jyf_main) '
}

prompt_jyf_setup() {
  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info

  prompt_opts=(cr subst percent)

  add-zsh-hook precmd prompt_jyf_precmd

  zstyle ':vcs_info:*' enable git
  zstyle ':vcs_info:*' check-for-changes false
  zstyle ':vcs_info:git*' formats '%b'
  zstyle ':vcs_info:git*' actionformats '%b (%a)'
}

prompt_jyf_setup "$@"
